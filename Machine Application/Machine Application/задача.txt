//файл
МЕНЮ
# название цена количество
кексы 50 4
печенье 10 3
вафли 30 10

НОМИНАЛЫ
1 2 5 10

ПОКУПАТЕЛЬ
# номиналы в соответствии порядку в секции НОМИНАЛЫ
10 10 10 7

АВТОМАТ
# номиналы в соответствии порядку в секции НОМИНАЛЫ
0 0 0 0










//0
Внесено: 0р.
Выберете действие покупателя:
1. Внести деньги в автомат
2. Выбрать пункт меню
3. Попросить сдачу
4. Выход из программы
_


//0.1
Монеты покупателя (всего 150р):
1р - 10 шт
2р - 10 шт
5р - 10 шт
10р - 7 шт
Введите вносимое количество монет для каждого номинала по возрастанию номиналов:
_

//0.1.1
Успешно внесено 30р!
Всего внесено: 30р.
(Нажмите Enter, чтобы продолжить)
_

//0.1.2
У покупателя отсутствует указанное количество монет!
(Нажмите Enter, чтобы продолжить)
_

//0.2
Меню:
1. кексы, 50р
2. печенье, 10р
3. вафли, 30р
Введите выбранный пункт меню:
_

//0.2.1
Выдан товар:
кексы
(Нажмите Enter, чтобы продолжить)
_

//0.2.2
Выбранный товар отсутствует.
(Нажмите Enter, чтобы продолжить)
_

//0.2.3
Не хватает денег для выбранного товара.
(Нажмите Enter, чтобы продолжить)
_

//0.2.4
Неправильно введён выбранный товар.
Необходимо ввести число от 1 до 3, например: "2".
(Нажмите Enter, чтобы продолжить)
_

//0.3.1
Выдана сдача (всего 11р):
1р - 1 шт
5р - 2 шт
(Нажмите Enter, чтобы продолжить)
_

//0.3.2
У автомата нет монет на сдачу!:
(Нажмите Enter, чтобы продолжить)
_

//0.4
Неправильно введено указанное действие.
Необходимо ввести число от 1 до 3, например: "3".
(Нажмите Enter, чтобы продолжить)
_








[1]   [2]   [5]   [10]

 0     10    0     3    =   60
 .     .     .     .    =   7
 .     .     .          
 .     .     .     1    =   10 - !
 .     .     .          =   0
 .     .           ^          
 .                      =   0
 .           ^     .         
 .     1           .    =   2
 .     2     .     .    =   4
 .     3     .     .    =   6
 .     4     .     .    =   8 - !
 .     3     .     .    =   6
       ^     .     .          
       3     .     .    =   6
 ^           .     .          
       2     .     .    =   4
       ^     .     .         
 ^           .     .         
       1     .     .    =   2
       ^     .     .         
 ^           .     .         
             .     .    =   0
 .     ^     .     .         
 .           ^               
 .     .     .     ^         
 .     .     .     .    x    - !!!                                  







 
 
 
 
 
 
       [1]      [2]      [5]      [10]
        
       max      max      max      max
       
       loop:    loop:    loop:    loop:    
       ch_eq    ch_eq    ch_eq    ch_eq      - save, throw
       ch_gr    ch_gr    ch_gr    ch_gr      - dec
       ch_ls    ch_ls    ch_ls    ch_ls      - break
       loop     loop     loop     loop     
       
       loop:    loop:    loop:    loop:    
       ch_fst   ch_fst   ch_fst   ch_fst     - zero
       ch_zr    ch_zr    ch_zr    ch_zr      - break
       rec_cl   rec_cl   rec_cl   rec_cl   
       dec      dec      dec      dec
       loop     loop     loop     loop     
              
       !ch_fst  !ch_fst  !ch_fst  !ch_fst    - rec_cl
       ch_lst   ch_lst   ch_lst   ch_lst     - throw
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 





foreach (int xx in change) Console.Write("{0} ", xx);
Console.WriteLine();
Console.WriteLine("h");
Console.ReadKey();







